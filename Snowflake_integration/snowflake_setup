CREATE OR REPLACE DATABASE TESTDB;

CREATE OR REPLACE SCHEMA TESTDB.ECOMMERCE;

-- 1 CREATE FORMAT
-- REF https://docs.snowflake.com/en/sql-reference/sql/create-file-format.html
-- REF https://docs.snowflake.com/en/sql-reference/sql/alter-file-format.html
-- follows: "DATABASENAME"."SCHEMANAME".FORMATNAME
CREATE FILE FORMAT "TESTDB"."ECOMMERCE".ECOMMERCECSVFORMAT
-- add SET if ALTER (insted io create)
COMPRESSION = 'AUTO'
FIELD_DELIMITER = ','
RECORD_DELIMITER = '\n'
SKIP_HEADER = 1
FIELD_OPTIONALLY_ENCLOSED_BY = 'NONE'
TRIM_SPACE = FALSE
TIMESTAMP_FORMAT = 'MM/DD/YYYY HH:MI'
ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE
ESCAPE = 'NONE'
ESCAPE_UNENCLOSED_FIELD = '\134'
NULL_IF = ('\\N');

-- "DATABASENAME"."SCHEMANAME".DATANAME
-- 2. CREATE DATA

CREATE OR REPLACE TABLE TESTDB.ECOMMERCE.spotify_tracks (
  artist STRING,
  track STRING,
  url STRING
);


CREATE STORAGE INTEGRATION s3_integration
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = S3
  ENABLED = TRUE
  STORAGE_AWS_ROLE_ARN = 'your storage AWS role ARN'
  STORAGE_ALLOWED_LOCATIONS = ('s3://Your bucket name/spark_tracks_csv/');

DESC INTEGRATION s3_integration;


CREATE OR REPLACE STAGE TESTDB.ECOMMERCE.spotify_stage
  URL = 's3://Your bucket name/spark_tracks_csv/'
  STORAGE_INTEGRATION = s3_integration
  FILE_FORMAT = TESTDB.ECOMMERCE.ECOMMERCECSVFORMAT;

  LIST @TESTDB.ECOMMERCE.spotify_stage;


CREATE OR REPLACE PIPE TESTDB.ECOMMERCE.spotify_pipe
  AUTO_INGEST = TRUE
  AS
  COPY INTO TESTDB.ECOMMERCE.spotify_tracks
  FROM @TESTDB.ECOMMERCE.spotify_stage
  FILE_FORMAT = (FORMAT_NAME = TESTDB.ECOMMERCE.ECOMMERCECSVFORMAT)
  ON_ERROR = 'CONTINUE';


  DESC PIPE TESTDB.ECOMMERCE.spotify_pipe;

  ALTER PIPE TESTDB.ECOMMERCE.spotify_pipe REFRESH;
 
  SELECT * FROM TESTDB.ECOMMERCE.spotify_tracks;
  
  
  
